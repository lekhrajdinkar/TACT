import { Action } from '@ngrx/store';
import { AuthActionTypes } from './auth.actions';

//generated by scehamtics
export interface State {}

export const initialState: State = {};

export function reducer(state = initialState, action: Action): State {
  switch (action.type) {

    default:
      return state;
  }
}


//Same already written in action tc. moved same here in reducer file
//2. state
export type AuthState = {
  isLoggedIn: boolean;
  currentUser: string;
  jwt : string;
}

//3. Reducer - updates state when action is dispatch with payload

const initialState1 = { isLoggedIn: false, currentUser: undefined, jwt : undefined}

export function authReducer(state :AuthState = initialState1, action) : AuthState {
  switch(action.type){

    case AuthActionTypes.Login : return { isLoggedIn : true, currentUser : action.payload.initial, jwt : action.payload.jwt} ;

    case AuthActionTypes.Logout : return { isLoggedIn : false, currentUser : undefined, jwt : undefined} 

    default : return state;
  }
}
